library(tidyverse)
library(janitor)
library(assertr)
meteors <- read_rds("data/decathlon.rds")
library(here)
here::here()
meteors <- read_rds("data/decathlon.rds")
decathlon <- read_rds("data/decathlon.rds")
decathlon <- read_rds("data/decathlon.rds")
View(decathlon)
row.names(decathlon)
names <- row.names(decathlon)
names_vector <- row.names(decathlon)
mutate(decathlon, name = names_vector, .before = "100m")
remove_rownames(decathlon)
View(decathlon)
remove_rownames(decathlon) %>%
mutate(name = names_vector, .before = "100m") -> decathlon_named
View(decathlon_named)
decathlon_clean_names <- decathlon_named %>%
clean_names()
View(decathlon_clean_names)
?clean_names
?str_remove
for(i = 1:ncol(decathlon_clean_names)){
source("~/.active-rstudio-document", echo=TRUE)
colnames(decathlon_clean_names[1])
colnames(decathlon_clean_names[i]) == str_detect("^x")
colnames(decathlon_clean_names[1]) == str_detect("^x")
str_detect(decathlon_clean_names[1],"^x")
str_detect(decathlon_clean_names[2],"^x")
str_detect(decathlon_clean_names[2],"x")
decathlon_clean_names[2]
str_detect(colnames(decathlon_clean_names[2]),"x")
str_detect(colnames(decathlon_clean_names[2]),"^x")
for(i in 1:ncol(decathlon_clean_names)){
if str_detect(colnames(decathlon_clean_names[i]),"^x"){
ncol(decathlon_clean_names)
y <- x + i
for (i in 1:ncol(decathlon)){
x <- 0
y <- x + i
}
for(i in 1:ncol(decathlon_clean_names)){
if str_detect(colnames(decathlon_clean_names[i]),"^x"){
for(i in 1:ncol(decathlon_clean_names)){
if (str_detect(colnames(decathlon_clean_names[i]),"^x")){
rename(decathlon_clean_names[i], str_remove(decathlon_clean_names[i], "x"))
}
}
colnames(decathlon_clean_names)[1]
for(i in 1:ncol(decathlon_clean_names)){
if (str_detect(colnames(decathlon_clean_names[i]),"^x")){
rename(colnames(decathlon_clean_names)[i],
str_remove(colnames(decathlon_clean_names)[i], "x"))
}
}
for(i in 1:ncol(decathlon_clean_names)){
if (str_detect(colnames(decathlon_clean_names[i]),"^x")){
rename(colnames(decathlon_clean_names)[i] =
?rename
for(i in 1:ncol(decathlon_clean_names)){
if (str_detect(colnames(decathlon_clean_names[i]),"^x")){
rename(decathlon_clean_names,
colnames(decathlon_clean_names)[i] =
for(i in 1:ncol(decathlon_clean_names)){
if (str_detect(colnames(decathlon_clean_names[i]),"^x")){
rename(decathlon_clean_names,
str_remove(colnames(decathlon_clean_names)[i], "x") =
str_remove(colnames(decathlon_clean_names)[i], "x")
str_remove(colnames(decathlon_clean_names)[i], "x")
for(i in 1:ncol(decathlon_clean_names)){
if (str_detect(colnames(decathlon_clean_names[i]),"^x")){
str_remove(colnames(decathlon_clean_names)[i], "x")
}
}
View(decathlon_clean_names)
rename(decathlon_clean_names, "names" = "name")
rename(decathlon_clean_names, "name" = "names")
decathlon_clean_names <- rename(colnames(decathlon_clean_names)[1] = colnames(decathlon_clean_names)[1])
decathlon_clean_names <- rename("names" = "name")
decathlon_clean_names <- decathlon_named %>%
clean_names() %>%
rename("100m" = "x100m")
decathlon_clean_names <- decathlon_named %>%
clean_names() %>%
rename("100m" = "x100m") %>%
rename("400m" = "x400m") %>%
rename("1500m" = "x1500m") %>%
rename("110m_hurdle" = "110m_hurdle")
decathlon_clean_names <- decathlon_named %>%
clean_names() %>%
rename("100m" = "x100m") %>%
rename("400m" = "x400m") %>%
rename("1500m" = "x1500m") %>%
rename("110m_hurdle" = "x110m_hurdle")
decathlon_clean_names <- rename("name" = "names")
decathlon_clean_names <- rename(decathlon_clean_names, "name" = "names")
mutate(name = str_to_title(name))
mutate(name = str_to_title(name))
decathlon_clean_names %>%
mutate(name = str_to_title(name))
decathlon_title <- decathlon_clean_names %>%
mutate(name = str_to_title(name))
View(decathlon_title)
write_csv(decathlon_title, "data/decathlon_clean.csv")
library(tidyverse)
decathlon <- read_csv("data/decathlon_clean.csv")
library(tidyverse)
decathlon <- read_csv("data/decathlon_clean.csv")
View(decathlon)
slice_max(decathlon, long_jump)
slice_max(decathlon, long_jump) %>%
select(name)
slice_max(decathlon, long_jump) %>%
select(name, long_jump)
decathlon %>%
filter(competition == "OlympicG") %>%
mean(100m)
decathlon %>%
filter(competition == "OlympicG") %>%
mean("100m")
class(decathlon$100m)
class(decathlon$100m)
decathlon$100m
decathlon_clean_names <- decathlon_named %>%
clean_names() %>%
rename("x100m" = "x100m") %>%
rename("x400m" = "x400m") %>%
rename("x1500m" = "x1500m") %>%
rename("x110m_hurdle" = "x110m_hurdle")
source("~/Desktop/CodeClan Origins Part 2/dirty_data_codeclan_project_alistair_trucco/task_1/decathlon/data_cleaning/cleaning_script.R", echo=TRUE)
decathlon <- read_csv("data/decathlon_clean.csv")
slice_max(decathlon, long_jump) %>%
select(name, long_jump)
decathlon %>%
filter(competition == "OlympicG") %>%
mean("100m")
decathlon %>%
filter(competition == "OlympicG") %>%
mean("x100m")
decathlon %>%
filter(competition == "OlympicG") %>%
select(x100m) %>%
mean()
decathlon %>%
filter(competition == "OlympicG")
decathlon %>%
filter(competition == "OlympicG") %>%
select(x100m)
decathlon %>%
filter(competition == "OlympicG") %>%
select(x100m)
decathlon %>%
filter(competition == "OlympicG") %>%
select(x100m) -> bing
mean(bing)
mean(as.vector(bing))
mean(c(1,2,3,4))
as_vector(bing)
?as_vector
mean(as.vector(bing))
decathlon %>%
filter(competition == "OlympicG") %>%
select(x100m) -> bing
mean(as.vector(bing))
class(bing)
class(decathlon$x100m)
mean(decathlon$x100m)
decathlon %>%
filter(competition == "OlympicG") %>%
select(x100m) %>%
mean()
decathlon %>%
filter(competition == "OlympicG") %>%
as_vector(select(x100m), 1) %>%
mean()
decathlon %>%
filter(competition == "OlympicG") %>%
select(x100m) %>%
mean(decathlon$x100m)
decathlon %>%
filter(competition == "OlympicG") %>%
select(x100m) %>%
mean(decathlon$x100m)
mean(decathlon$x100m)
decathlon %>%
filter(competition == "OlympicG") %>%
select(x100m)
decathlon %>%
filter(competition == "OlympicG") %>%
select(x100m) %>%
mean("x100m")
mean(x100m)
mean(x100m)
mean(decathlon$x100m)
decathlon <- read_csv("data/decathlon_clean.csv")
olympic_g <- decathlon %>%
filter(competition == "OlympicG")
decastar <- decathlon %>%
filter(competition == "Decastar")
mean(olympic_g$x100m)
mean(decastar$x100m)
mean(olympic_g$x100m)
slice_max(decathlon, points)
?join
inner_join(olympic_g, decastar, by = name)
inner_join(olympic_g, decastar, by = "name")
inner_join(olympic_g, decastar, by = "name") %>%
slice_max((points.x + points.y))
inner_join(olympic_g, decastar, by = "name", suffix = c(.oly, .dec)) %>%
slice_max((points.oly + points.dec))
inner_join(olympic_g, decastar, by = "name", suffix = c(.oly, .dec)) %>%
slice_max((points.oly + points.dec))
inner_join(olympic_g, decastar, by = "name", suffix = c(.oly, .dec))
inner_join(olympic_g, decastar, by = "name", suffix = c(".oly", ".dec")) %>%
slice_max((points.oly + points.dec))
for (i in 1:nrow(decathlon)){
if(decathlon$name[i] = "Sebrle"){
if(decathlon$name[i] == "Sebrle"){
tot_points <- decathlon$points[i] + tot_points
}
for (i in 1:nrow(decathlon)){
if(decathlon$name[i] == "Sebrle"){
tot_points <- decathlon$points[i] + tot_points
}
}
tot_points = 0
for (i in 1:nrow(decathlon)){
if(decathlon$name[i] == "Sebrle"){
tot_points <- decathlon$points[i] + tot_points
}
}
return(tot_points)
for (i in 1:nrow(decathlon)){
if(decathlon$name[i] == "Sebrle"){
tot_points <- decathlon$points[i] + tot_points
}
return(tot_points)
}
tot_points = 0
for (i in 1:nrow(decathlon)){
if(decathlon$name[i] == "Sebrle"){
tot_points <- decathlon$points[i] + tot_points
}
return(tot_points)
}
tot_points = 0
for (i in 1:nrow(decathlon)){
if(decathlon$name[i] == "Sebrle"){
tot_points <- decathlon$points[i] + tot_points
}
}
tot_points = 0
for (i in 1:nrow(decathlon)){
if(decathlon$name[i] == "Sebrle"){
tot_points <- decathlon$points[i] + tot_points
}
print(tot_points)
}
print(tot_points)
tot_points = 0
for (i in 1:nrow(decathlon)){
if(decathlon$name[i] == "Sebrle"){
tot_points <- decathlon$points[i] + tot_points
}
}
print(tot_points)
decathlon %>%
filter(name == "Sebrle") %>%
select(points)
decathlon %>%
filter(name == "Sebrle") %>%
select(points) %>%
sum()
slice_max(decastar, shot_put, n = 3)
slice_max(decastar, shot_put, n = 3) %>%
filter(name, shot_put)
slice_max(decastar, shot_put, n = 3) %>%
select(name, shot_put)
slice_max(olympic_g, shot_put, n = 3) %>%
select(name, shot_put)
slice_max(decastar, shot_put, n = 3) %>%
select(name, shot_put)
rename_with?
)
?rename_with
names_vector <- row.names(decathlon)
remove_rownames(decathlon) %>%
mutate(name = names_vector, .before = "100m") -> decathlon_named
decathlon <- read_rds("data/decathlon.rds")
names_vector <- row.names(decathlon)
remove_rownames(decathlon) %>%
mutate(name = names_vector, .before = "100m") -> decathlon_named
rename_with(decathlon_named, str_remove("^x"))
rename_with(decathlon_named, str_remove(colnames(decathlon_named), "^x"))
rename_with(decathlon_named, str_remove(, "^x"))
decathlon %>%
summarise(mean(x100m), .by = Competition)
decathlon %>%
summarise(mean(x100m), .by = competition)
decathlon <- read_csv("data/decathlon_clean.csv")
decathlon %>%
summarise(mean(x100m), .by = competition)
decathlon %>%
summarise(sum(), .by = name == "Sebrle")
decathlon %>%
summarise(sum(), .by = (name == "Sebrle"))
decathlon %>%
summarise(sum(), .by = (decathlon$name == "Sebrle"))
decathlon %>%
filter(name == "Sebrle") %>%
select(points) %>%
sum()
slice_max(olympic_g, shot_put, n = 3) %>%
select(name, shot_put)
decathlon <- read_csv("../data/decathlon_clean.csv")
faster <- decathlon %>%
fliter(x400m > 50)
faster <- decathlon %>%
filter(x400m > 50)
faster <- decathlon %>%
filter(x400m > 50)
slower <- decathlon %>%
filter(x400m > 50)
summarize(faster, mean())
mean(faster$x400m)
faster <- decathlon %>%
filter(x400m < 50)
slower <- decathlon %>%
filter(x400m > 50)
mean(faster$x400m)
faster <- decathlon %>%
filter(x400m < 50)
slower <- decathlon %>%
filter(x400m > 50)
mean(faster$x400m)
mean(slower$x400m)
faster <- decathlon %>%
filter(x400m < 50)
slower <- decathlon %>%
filter(x400m > 50)
mean(faster$points)
mean(slower$points)
?group_by
decathlon %>%
group_by(x400m > 50)
decathlon %>%
group_by(x400m > 50) %>%
summarise(mean(points))
decathlon %>%
group_by(x400m < 50) %>%
summarise(mean(points))
